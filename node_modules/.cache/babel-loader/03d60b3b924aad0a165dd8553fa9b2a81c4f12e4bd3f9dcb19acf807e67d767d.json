{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JOY\\\\Desktop\\\\ultimate-react-course-main (1)\\\\ultimate-react-course-main\\\\12-atomic-blog\\\\starter\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { useEffect, useState, createContext, useContext } from \"react\";\nimport { faker } from \"@faker-js/faker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createRandomPost() {\n  return {\n    title: `${faker.hacker.adjective()} ${faker.hacker.noun()}`,\n    body: faker.hacker.phrase()\n  };\n}\n//1)create new context\nconst PostContext = /*#__PURE__*/createContext(); //RETURNS A CONTEXT it is a component\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState(() => Array.from({\n    length: 30\n  }, () => createRandomPost()));\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isFakeDark, setIsFakeDark] = useState(false);\n\n  // Derived state. These are the posts that will actually be displayed\n  const searchedPosts = searchQuery.length > 0 ? posts.filter(post => `${post.title} ${post.body}`.toLowerCase().includes(searchQuery.toLowerCase())) : posts;\n  function handleAddPost(post) {\n    setPosts(posts => [post, ...posts]);\n  }\n  function handleClearPosts() {\n    setPosts([]);\n  }\n\n  // Whenever `isFakeDark` changes, we toggle the `fake-dark-mode` class on the HTML element (see in \"Elements\" dev tool).\n  useEffect(function () {\n    document.documentElement.classList.toggle(\"fake-dark-mode\");\n  }, [isFakeDark]);\n  return (\n    /*#__PURE__*/\n    //2) provide value to the child component \n    _jsxDEV(PostContext.Provider, {\n      value: {\n        posts: searchedPosts,\n        onClearPosts: handleClearPosts,\n        searchQuery,\n        setSearchQuery\n      },\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsFakeDark(isFakeDark => !isFakeDark),\n          className: \"btn-fake-dark-mode\",\n          children: isFakeDark ? \"☀️\" : \"🌙\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          posts: searchedPosts,\n          onAddPost: handleAddPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Archive, {\n          onAddPost: handleAddPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"drlerC2/8pgflUDF6s0QAuogTGQ=\");\n_c = App;\nfunction Header() {\n  _s2();\n  const {\n    onClearPosts\n  } = useContext(PostContext);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u269B\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), \"The Atomic Blog\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Results, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchPosts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClearPosts,\n        children: \"Clear posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s2(Header, \"uARWQDfJDxqEEu+40Fxqw2NiZAE=\");\n_c2 = Header;\nfunction SearchPosts({\n  searchQuery,\n  setSearchQuery\n}) {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: searchQuery,\n    onChange: e => setSearchQuery(e.target.value),\n    placeholder: \"Search posts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_c3 = SearchPosts;\nfunction Results({\n  posts\n}) {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\uD83D\\uDE80 \", posts.length, \" atomic posts found\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n}\n_c4 = Results;\nfunction Main({\n  posts,\n  onAddPost\n}) {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(FormAddPost, {\n      onAddPost: onAddPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Posts, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_c5 = Main;\nfunction Posts({\n  posts\n}) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_c6 = Posts;\nfunction FormAddPost({\n  onAddPost\n}) {\n  _s3();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const handleSubmit = function (e) {\n    e.preventDefault();\n    if (!body || !title) return;\n    onAddPost({\n      title,\n      body\n    });\n    setTitle(\"\");\n    setBody(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Post title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: body,\n      onChange: e => setBody(e.target.value),\n      placeholder: \"Post body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s3(FormAddPost, \"6HXhu2MyhlZpOMFDXlcyR7kq/h8=\");\n_c7 = FormAddPost;\nfunction List({\n  posts\n}) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_c8 = List;\nfunction Archive({\n  onAddPost\n}) {\n  _s4();\n  // Here we don't need the setter function. We're only using state to store these posts because the callback function passed into useState (which generates the posts) is only called once, on the initial render. So we use this trick as an optimization technique, because if we just used a regular variable, these posts would be re-created on every render. We could also move the posts outside the components, but I wanted to show you this trick 😉\n  const [posts] = useState(() =>\n  // 💥 WARNING: This might make your computer slow! Try a smaller `length` first\n  Array.from({\n    length: 10000\n  }, () => createRandomPost()));\n  const [showArchive, setShowArchive] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post archive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowArchive(s => !s),\n      children: showArchive ? \"Hide archive posts\" : \"Show archive posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), showArchive && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [post.title, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this), \" \", post.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onAddPost(post),\n          children: \"Add as new post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s4(Archive, \"4vJo18aL1dyIZKYxOqwfowpOM/g=\");\n_c9 = Archive;\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: \"\\xA9 by The Atomic Blog \\u270C\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 10\n  }, this);\n}\n_c10 = Footer;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"SearchPosts\");\n$RefreshReg$(_c4, \"Results\");\n$RefreshReg$(_c5, \"Main\");\n$RefreshReg$(_c6, \"Posts\");\n$RefreshReg$(_c7, \"FormAddPost\");\n$RefreshReg$(_c8, \"List\");\n$RefreshReg$(_c9, \"Archive\");\n$RefreshReg$(_c10, \"Footer\");","map":{"version":3,"names":["useEffect","useState","createContext","useContext","faker","jsxDEV","_jsxDEV","createRandomPost","title","hacker","adjective","noun","body","phrase","PostContext","App","_s","posts","setPosts","Array","from","length","searchQuery","setSearchQuery","isFakeDark","setIsFakeDark","searchedPosts","filter","post","toLowerCase","includes","handleAddPost","handleClearPosts","document","documentElement","classList","toggle","Provider","value","onClearPosts","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","Header","Main","onAddPost","Archive","Footer","_c","_s2","Results","SearchPosts","_c2","onChange","e","target","placeholder","_c3","_c4","FormAddPost","Posts","_c5","List","_c6","_s3","setTitle","setBody","handleSubmit","preventDefault","onSubmit","_c7","map","i","_c8","_s4","showArchive","setShowArchive","s","_c9","_c10","$RefreshReg$"],"sources":["C:/Users/JOY/Desktop/ultimate-react-course-main (1)/ultimate-react-course-main/12-atomic-blog/starter/src/App.js"],"sourcesContent":["import { useEffect, useState,createContext, useContext } from \"react\";\nimport { faker } from \"@faker-js/faker\";\n\nfunction createRandomPost() {\n  return {\n    title: `${faker.hacker.adjective()} ${faker.hacker.noun()}`,\n    body: faker.hacker.phrase(),\n  };\n}\n//1)create new context\nconst PostContext=createContext(); //RETURNS A CONTEXT it is a component\nfunction App() {\n  const [posts, setPosts] = useState(() =>\n    Array.from({ length: 30 }, () => createRandomPost())\n  );\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isFakeDark, setIsFakeDark] = useState(false);\n\n  // Derived state. These are the posts that will actually be displayed\n  const searchedPosts =\n    searchQuery.length > 0\n      ? posts.filter((post) =>\n          `${post.title} ${post.body}`\n            .toLowerCase()\n            .includes(searchQuery.toLowerCase())\n        )\n      : posts;\n\n  function handleAddPost(post) {\n    setPosts((posts) => [post, ...posts]);\n  }\n\n  function handleClearPosts() {\n    setPosts([]);\n  }\n\n  // Whenever `isFakeDark` changes, we toggle the `fake-dark-mode` class on the HTML element (see in \"Elements\" dev tool).\n  useEffect(\n    function () {\n      document.documentElement.classList.toggle(\"fake-dark-mode\");\n    },\n    [isFakeDark]\n  );\n\n  return (\n    //2) provide value to the child component \n    <PostContext.Provider \n    value={{posts:searchedPosts,\n    onClearPosts:handleClearPosts,\n    searchQuery,\n    setSearchQuery,\n    }}>\n    <section>\n      <button\n        onClick={() => setIsFakeDark((isFakeDark) => !isFakeDark)}\n        className=\"btn-fake-dark-mode\"\n      >\n        {isFakeDark ? \"☀️\" : \"🌙\"}\n      </button>\n\n      <Header\n      />\n      <Main posts={searchedPosts} onAddPost={handleAddPost} />\n      <Archive onAddPost={handleAddPost} />\n      <Footer />\n    </section>\n    </PostContext.Provider>\n  );\n}\n\nfunction Header() {\n  const {onClearPosts}=useContext(PostContext)\n  return (\n    <header>\n      <h1>\n        <span>⚛️</span>The Atomic Blog\n      </h1>\n      <div>\n        <Results />\n        <SearchPosts\n    \n        />\n        <button onClick={onClearPosts}>Clear posts</button>\n      </div>\n    </header>\n  );\n}\n\nfunction SearchPosts({ searchQuery, setSearchQuery }) {\n  return (\n    <input\n      value={searchQuery}\n      onChange={(e) => setSearchQuery(e.target.value)}\n      placeholder=\"Search posts...\"\n    />\n  );\n}\n\nfunction Results({ posts }) {\n  return <p>🚀 {posts.length} atomic posts found</p>;\n}\n\nfunction Main({ posts, onAddPost }) {\n  return (\n    <main>\n      <FormAddPost onAddPost={onAddPost} />\n      <Posts posts={posts} />\n    </main>\n  );\n}\n\nfunction Posts({ posts }) {\n  return (\n    <section>\n      <List posts={posts} />\n    </section>\n  );\n}\n\nfunction FormAddPost({ onAddPost }) {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const handleSubmit = function (e) {\n    e.preventDefault();\n    if (!body || !title) return;\n    onAddPost({ title, body });\n    setTitle(\"\");\n    setBody(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Post title\"\n      />\n      <textarea\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n        placeholder=\"Post body\"\n      />\n      <button>Add post</button>\n    </form>\n  );\n}\n\nfunction List({ posts }) {\n  return (\n    <ul>\n      {posts.map((post, i) => (\n        <li key={i}>\n          <h3>{post.title}</h3>\n          <p>{post.body}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction Archive({ onAddPost }) {\n  // Here we don't need the setter function. We're only using state to store these posts because the callback function passed into useState (which generates the posts) is only called once, on the initial render. So we use this trick as an optimization technique, because if we just used a regular variable, these posts would be re-created on every render. We could also move the posts outside the components, but I wanted to show you this trick 😉\n  const [posts] = useState(() =>\n    // 💥 WARNING: This might make your computer slow! Try a smaller `length` first\n    Array.from({ length: 10000 }, () => createRandomPost())\n  );\n\n  const [showArchive, setShowArchive] = useState(false);\n\n  return (\n    <aside>\n      <h2>Post archive</h2>\n      <button onClick={() => setShowArchive((s) => !s)}>\n        {showArchive ? \"Hide archive posts\" : \"Show archive posts\"}\n      </button>\n\n      {showArchive && (\n        <ul>\n          {posts.map((post, i) => (\n            <li key={i}>\n              <p>\n                <strong>{post.title}:</strong> {post.body}\n              </p>\n              <button onClick={() => onAddPost(post)}>Add as new post</button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </aside>\n  );\n}\n\nfunction Footer() {\n  return <footer>&copy; by The Atomic Blog ✌️</footer>;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}