{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JOY\\\\Desktop\\\\ultimate-react-course-main (1)\\\\ultimate-react-course-main\\\\12-atomic-blog\\\\starter\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$();\nimport { useEffect, useState, createContext, useContext } from \"react\";\nimport { faker } from \"@faker-js/faker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createRandomPost() {\n  return {\n    title: `${faker.hacker.adjective()} ${faker.hacker.noun()}`,\n    body: faker.hacker.phrase()\n  };\n}\n//1)create new context\nfunction App() {\n  _s();\n  const [isFakeDark, setIsFakeDark] = useState(false);\n\n  // Whenever `isFakeDark` changes, we toggle the `fake-dark-mode` class on the HTML element (see in \"Elements\" dev tool).\n  useEffect(function () {\n    document.documentElement.classList.toggle(\"fake-dark-mode\");\n  }, [isFakeDark]);\n  return (\n    /*#__PURE__*/\n    //2) provide value to the child component \n    _jsxDEV(PostContext.Provider, {\n      value: {\n        posts: searchedPosts,\n        onClearPosts: handleClearPosts,\n        searchQuery,\n        setSearchQuery,\n        onAddPost: handleAddPost\n      },\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsFakeDark(isFakeDark => !isFakeDark),\n          className: \"btn-fake-dark-mode\",\n          children: isFakeDark ? \"☀️\" : \"🌙\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Archive, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"GRmUsQf4Odg67DpcmO6m2cfNgTk=\");\n_c = App;\nfunction Header() {\n  _s2();\n  const {\n    onClearPosts\n  } = useContext(PostContext);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u269B\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), \"The Atomic Blog\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Results, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchPosts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClearPosts,\n        children: \"Clear posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s2(Header, \"uARWQDfJDxqEEu+40Fxqw2NiZAE=\");\n_c2 = Header;\nfunction SearchPosts() {\n  _s3();\n  const {\n    searchQuery,\n    setSearchQuery\n  } = useContext(PostContext);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: searchQuery,\n    onChange: e => setSearchQuery(e.target.value),\n    placeholder: \"Search posts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s3(SearchPosts, \"cjUjgcpSmy/7ySn1KV3cU0t9HnA=\");\n_c3 = SearchPosts;\nfunction Results() {\n  _s4();\n  const {\n    posts\n  } = useContext(PostContext);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\uD83D\\uDE80 \", posts.length, \" atomic posts found\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n}\n_s4(Results, \"LiZKrBsCpxbpRZq7dGMrxMWzF18=\");\n_c4 = Results;\nfunction Main() {\n  _s5();\n  const {\n    posts\n  } = useContext(PostContext);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(FormAddPost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Posts, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s5(Main, \"LiZKrBsCpxbpRZq7dGMrxMWzF18=\");\n_c5 = Main;\nfunction Posts() {\n  _s6();\n  const {\n    posts\n  } = useContext(PostContext);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s6(Posts, \"LiZKrBsCpxbpRZq7dGMrxMWzF18=\");\n_c6 = Posts;\nfunction FormAddPost() {\n  _s7();\n  const {\n    onAddPost\n  } = useContext(PostContext);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const handleSubmit = function (e) {\n    e.preventDefault();\n    if (!body || !title) return;\n    onAddPost({\n      title,\n      body\n    });\n    setTitle(\"\");\n    setBody(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Post title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: body,\n      onChange: e => setBody(e.target.value),\n      placeholder: \"Post body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s7(FormAddPost, \"ri2Tg8BO7bpEpwFsjDMsT3/gUqc=\");\n_c7 = FormAddPost;\nfunction List() {\n  _s8();\n  const {\n    posts\n  } = useContext(PostContext);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s8(List, \"HJzIqX8tD7UFv6WrvlK0x2fzJA4=\");\n_c8 = List;\nfunction Archive() {\n  _s9();\n  const {\n    onAddPost\n  } = useContext(PostContext);\n  // Here we don't need the setter function. We're only using state to store these posts because the callback function passed into useState (which generates the posts) is only called once, on the initial render. So we use this trick as an optimization technique, because if we just used a regular variable, these posts would be re-created on every render. We could also move the posts outside the components, but I wanted to show you this trick 😉\n  const [posts] = useState(() =>\n  // 💥 WARNING: This might make your computer slow! Try a smaller `length` first\n  Array.from({\n    length: 10000\n  }, () => createRandomPost()));\n  const [showArchive, setShowArchive] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post archive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowArchive(s => !s),\n      children: showArchive ? \"Hide archive posts\" : \"Show archive posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), showArchive && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [post.title, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this), \" \", post.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onAddPost(post),\n          children: \"Add as new post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s9(Archive, \"8vcNsrYya/4QVcfAYuYC3rreNzE=\");\n_c9 = Archive;\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: \"\\xA9 by The Atomic Blog \\u270C\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 10\n  }, this);\n}\n_c10 = Footer;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"SearchPosts\");\n$RefreshReg$(_c4, \"Results\");\n$RefreshReg$(_c5, \"Main\");\n$RefreshReg$(_c6, \"Posts\");\n$RefreshReg$(_c7, \"FormAddPost\");\n$RefreshReg$(_c8, \"List\");\n$RefreshReg$(_c9, \"Archive\");\n$RefreshReg$(_c10, \"Footer\");","map":{"version":3,"names":["useEffect","useState","createContext","useContext","faker","jsxDEV","_jsxDEV","createRandomPost","title","hacker","adjective","noun","body","phrase","App","_s","isFakeDark","setIsFakeDark","document","documentElement","classList","toggle","PostContext","Provider","value","posts","searchedPosts","onClearPosts","handleClearPosts","searchQuery","setSearchQuery","onAddPost","handleAddPost","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","Header","Main","Archive","Footer","_c","_s2","Results","SearchPosts","_c2","_s3","onChange","e","target","placeholder","_c3","_s4","length","_c4","_s5","FormAddPost","Posts","_c5","_s6","List","_c6","_s7","setTitle","setBody","handleSubmit","preventDefault","onSubmit","_c7","_s8","map","post","i","_c8","_s9","Array","from","showArchive","setShowArchive","s","_c9","_c10","$RefreshReg$"],"sources":["C:/Users/JOY/Desktop/ultimate-react-course-main (1)/ultimate-react-course-main/12-atomic-blog/starter/src/App.js"],"sourcesContent":["import { useEffect, useState,createContext, useContext } from \"react\";\nimport { faker } from \"@faker-js/faker\";\n\nfunction createRandomPost() {\n  return {\n    title: `${faker.hacker.adjective()} ${faker.hacker.noun()}`,\n    body: faker.hacker.phrase(),\n  };\n}\n//1)create new context\nfunction App() {\n  const [isFakeDark, setIsFakeDark] = useState(false);\n\n\n  // Whenever `isFakeDark` changes, we toggle the `fake-dark-mode` class on the HTML element (see in \"Elements\" dev tool).\n  useEffect(\n    function () {\n      document.documentElement.classList.toggle(\"fake-dark-mode\");\n    },\n    [isFakeDark]\n  );\n\n  return (\n    //2) provide value to the child component \n    <PostContext.Provider \n    value={{posts:searchedPosts,\n    onClearPosts:handleClearPosts,\n    searchQuery,\n    setSearchQuery,onAddPost:handleAddPost\n    }}>\n    <section>\n      <button\n        onClick={() => setIsFakeDark((isFakeDark) => !isFakeDark)}\n        className=\"btn-fake-dark-mode\"\n      >\n        {isFakeDark ? \"☀️\" : \"🌙\"}\n      </button>\n\n      <Header\n      />\n      <Main />\n      <Archive />\n      <Footer />\n    </section>\n    </PostContext.Provider>\n  );\n}\n\nfunction Header() {\n  const {onClearPosts}=useContext(PostContext)\n  return (\n    <header>\n      <h1>\n        <span>⚛️</span>The Atomic Blog\n      </h1>\n      <div>\n        <Results />\n        <SearchPosts\n        />\n        <button onClick={onClearPosts}>Clear posts</button>\n      </div>\n    </header>\n  );\n}\n\nfunction SearchPosts() {\n  const{searchQuery,setSearchQuery}=useContext(PostContext)\n  return (\n    <input\n      value={searchQuery}\n      onChange={(e) => setSearchQuery(e.target.value)}\n      placeholder=\"Search posts...\"\n    />\n  );\n}\n\nfunction Results() {\n  const{posts}=useContext(PostContext)\n  return <p>🚀 {posts.length} atomic posts found</p>;\n}\n\nfunction Main() {\n  const {posts}=useContext(PostContext)\n  return (\n    <main>\n      <FormAddPost />\n      <Posts posts={posts} />\n    </main>\n  );\n}\n\nfunction Posts() {\n  const{posts}=useContext(PostContext)\n  return (\n    <section>\n      <List posts={posts} />\n    </section>\n  );\n}\n\nfunction FormAddPost() {\n  const{onAddPost}=useContext(PostContext)\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const handleSubmit = function (e) {\n    e.preventDefault();\n    if (!body || !title) return;\n    onAddPost({ title, body });\n    setTitle(\"\");\n    setBody(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Post title\"\n      />\n      <textarea\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n        placeholder=\"Post body\"\n      />\n      <button>Add post</button>\n    </form>\n  );\n}\n\nfunction List() {\n  const { posts } = useContext(PostContext);\n  return (\n    <ul>\n      {posts.map((post, i) => (\n        <li key={i}>\n          <h3>{post.title}</h3>\n          <p>{post.body}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction Archive() {\n  const { onAddPost } = useContext(PostContext);\n  // Here we don't need the setter function. We're only using state to store these posts because the callback function passed into useState (which generates the posts) is only called once, on the initial render. So we use this trick as an optimization technique, because if we just used a regular variable, these posts would be re-created on every render. We could also move the posts outside the components, but I wanted to show you this trick 😉\n  const [posts] = useState(() =>\n    // 💥 WARNING: This might make your computer slow! Try a smaller `length` first\n    Array.from({ length: 10000 }, () => createRandomPost())\n  );\n\n  const [showArchive, setShowArchive] = useState(false);\n\n  return (\n    <aside>\n      <h2>Post archive</h2>\n      <button onClick={() => setShowArchive((s) => !s)}>\n        {showArchive ? \"Hide archive posts\" : \"Show archive posts\"}\n      </button>\n\n      {showArchive && (\n        <ul>\n          {posts.map((post, i) => (\n            <li key={i}>\n              <p>\n                <strong>{post.title}:</strong> {post.body}\n              </p>\n              <button onClick={() => onAddPost(post)}>Add as new post</button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </aside>\n  );\n}\n\nfunction Footer() {\n  return <footer>&copy; by The Atomic Blog ✌️</footer>;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}