{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JOY\\\\Desktop\\\\ultimate-react-course-main (1)\\\\ultimate-react-course-main\\\\12-atomic-blog\\\\starter\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$();\nimport { useEffect, useState, createContext, useContext } from \"react\";\nimport { faker } from \"@faker-js/faker\";\nimport { PostProvider, usePost } from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createRandomPost() {\n  return {\n    title: `${faker.hacker.adjective()} ${faker.hacker.noun()}`,\n    body: faker.hacker.phrase()\n  };\n}\n//1)create new context\nfunction App() {\n  _s();\n  const [isFakeDark, setIsFakeDark] = useState(false);\n\n  // Whenever `isFakeDark` changes, we toggle the `fake-dark-mode` class on the HTML element (see in \"Elements\" dev tool).\n  useEffect(function () {\n    document.documentElement.classList.toggle(\"fake-dark-mode\");\n  }, [isFakeDark]);\n  return (\n    /*#__PURE__*/\n    //2) provide value to the child component \n    _jsxDEV(PostProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsFakeDark(isFakeDark => !isFakeDark),\n          className: \"btn-fake-dark-mode\",\n          children: isFakeDark ? \"☀️\" : \"🌙\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Archive, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"GRmUsQf4Odg67DpcmO6m2cfNgTk=\");\n_c = App;\nfunction Header() {\n  _s2();\n  const {\n    onClearPosts\n  } = useContext(usePost);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u269B\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \"The Atomic Blog\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Results, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchPosts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClearPosts,\n        children: \"Clear posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s2(Header, \"uARWQDfJDxqEEu+40Fxqw2NiZAE=\");\n_c2 = Header;\nfunction SearchPosts() {\n  _s3();\n  const {\n    searchQuery,\n    setSearchQuery\n  } = useContext(usePost);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: searchQuery,\n    onChange: e => setSearchQuery(e.target.value),\n    placeholder: \"Search posts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s3(SearchPosts, \"cjUjgcpSmy/7ySn1KV3cU0t9HnA=\");\n_c3 = SearchPosts;\nfunction Results() {\n  _s4();\n  const {\n    posts\n  } = useContext(usePost);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\uD83D\\uDE80 \", posts.length, \" atomic posts found\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n}\n_s4(Results, \"LiZKrBsCpxbpRZq7dGMrxMWzF18=\");\n_c4 = Results;\nfunction Main() {\n  _s5();\n  const {\n    posts\n  } = useContext(usePost);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(FormAddPost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Posts, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s5(Main, \"LiZKrBsCpxbpRZq7dGMrxMWzF18=\");\n_c5 = Main;\nfunction Posts() {\n  _s6();\n  const {\n    posts\n  } = useContext(usePost);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s6(Posts, \"LiZKrBsCpxbpRZq7dGMrxMWzF18=\");\n_c6 = Posts;\nfunction FormAddPost() {\n  _s7();\n  const {\n    onAddPost\n  } = useContext(usePost);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const handleSubmit = function (e) {\n    e.preventDefault();\n    if (!body || !title) return;\n    onAddPost({\n      title,\n      body\n    });\n    setTitle(\"\");\n    setBody(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Post title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: body,\n      onChange: e => setBody(e.target.value),\n      placeholder: \"Post body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s7(FormAddPost, \"ri2Tg8BO7bpEpwFsjDMsT3/gUqc=\");\n_c7 = FormAddPost;\nfunction List() {\n  _s8();\n  const {\n    posts\n  } = useContext(usePost);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s8(List, \"HJzIqX8tD7UFv6WrvlK0x2fzJA4=\");\n_c8 = List;\nfunction Archive() {\n  _s9();\n  const {\n    onAddPost\n  } = useContext(usePost);\n  // Here we don't need the setter function. We're only using state to store these posts because the callback function passed into useState (which generates the posts) is only called once, on the initial render. So we use this trick as an optimization technique, because if we just used a regular variable, these posts would be re-created on every render. We could also move the posts outside the components, but I wanted to show you this trick 😉\n  const [posts] = useState(() =>\n  // 💥 WARNING: This might make your computer slow! Try a smaller `length` first\n  Array.from({\n    length: 10000\n  }, () => createRandomPost()));\n  const [showArchive, setShowArchive] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post archive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowArchive(s => !s),\n      children: showArchive ? \"Hide archive posts\" : \"Show archive posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), showArchive && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [post.title, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), \" \", post.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onAddPost(post),\n          children: \"Add as new post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s9(Archive, \"8vcNsrYya/4QVcfAYuYC3rreNzE=\");\n_c9 = Archive;\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: \"\\xA9 by The Atomic Blog \\u270C\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 10\n  }, this);\n}\n_c10 = Footer;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"SearchPosts\");\n$RefreshReg$(_c4, \"Results\");\n$RefreshReg$(_c5, \"Main\");\n$RefreshReg$(_c6, \"Posts\");\n$RefreshReg$(_c7, \"FormAddPost\");\n$RefreshReg$(_c8, \"List\");\n$RefreshReg$(_c9, \"Archive\");\n$RefreshReg$(_c10, \"Footer\");","map":{"version":3,"names":["useEffect","useState","createContext","useContext","faker","PostProvider","usePost","jsxDEV","_jsxDEV","createRandomPost","title","hacker","adjective","noun","body","phrase","App","_s","isFakeDark","setIsFakeDark","document","documentElement","classList","toggle","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","Header","Main","Archive","Footer","_c","_s2","onClearPosts","Results","SearchPosts","_c2","_s3","searchQuery","setSearchQuery","value","onChange","e","target","placeholder","_c3","_s4","posts","length","_c4","_s5","FormAddPost","Posts","_c5","_s6","List","_c6","_s7","onAddPost","setTitle","setBody","handleSubmit","preventDefault","onSubmit","_c7","_s8","map","post","i","_c8","_s9","Array","from","showArchive","setShowArchive","s","_c9","_c10","$RefreshReg$"],"sources":["C:/Users/JOY/Desktop/ultimate-react-course-main (1)/ultimate-react-course-main/12-atomic-blog/starter/src/App.js"],"sourcesContent":["import { useEffect, useState,createContext, useContext } from \"react\";\nimport { faker } from \"@faker-js/faker\";\nimport {PostProvider,usePost }from \"./Post\";\nfunction createRandomPost() {\n  return {\n    title: `${faker.hacker.adjective()} ${faker.hacker.noun()}`,\n    body: faker.hacker.phrase(),\n  };\n}\n//1)create new context\nfunction App() {\n  const [isFakeDark, setIsFakeDark] = useState(false);\n\n\n  // Whenever `isFakeDark` changes, we toggle the `fake-dark-mode` class on the HTML element (see in \"Elements\" dev tool).\n  useEffect(\n    function () {\n      document.documentElement.classList.toggle(\"fake-dark-mode\");\n    },\n    [isFakeDark]\n  );\n\n  return (\n    //2) provide value to the child component \n    <PostProvider>\n    <section>\n      <button\n        onClick={() => setIsFakeDark((isFakeDark) => !isFakeDark)}\n        className=\"btn-fake-dark-mode\"\n      >\n        {isFakeDark ? \"☀️\" : \"🌙\"}\n      </button>\n\n      <Header\n      />\n      <Main />\n      <Archive />\n      <Footer />\n    </section>\n</PostProvider>\n  );\n}\n\nfunction Header() {\n  const {onClearPosts}=useContext(usePost)\n  return (\n    <header>\n      <h1>\n        <span>⚛️</span>The Atomic Blog\n      </h1>\n      <div>\n        <Results />\n        <SearchPosts\n        />\n        <button onClick={onClearPosts}>Clear posts</button>\n      </div>\n    </header>\n  );\n}\n\nfunction SearchPosts() {\n  const{searchQuery,setSearchQuery}=useContext(usePost)\n  return (\n    <input\n      value={searchQuery}\n      onChange={(e) => setSearchQuery(e.target.value)}\n      placeholder=\"Search posts...\"\n    />\n  );\n}\n\nfunction Results() {\n  const{posts}=useContext(usePost)\n  return <p>🚀 {posts.length} atomic posts found</p>;\n}\n\nfunction Main() {\n  const {posts}=useContext(usePost)\n  return (\n    <main>\n      <FormAddPost />\n      <Posts posts={posts} />\n    </main>\n  );\n}\n\nfunction Posts() {\n  const{posts}=useContext(usePost)\n  return (\n    <section>\n      <List posts={posts} />\n    </section>\n  );\n}\n\nfunction FormAddPost() {\n  const{onAddPost}=useContext(usePost)\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const handleSubmit = function (e) {\n    e.preventDefault();\n    if (!body || !title) return;\n    onAddPost({ title, body });\n    setTitle(\"\");\n    setBody(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Post title\"\n      />\n      <textarea\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n        placeholder=\"Post body\"\n      />\n      <button>Add post</button>\n    </form>\n  );\n}\n\nfunction List() {\n  const { posts } = useContext(usePost);\n  return (\n    <ul>\n      {posts.map((post, i) => (\n        <li key={i}>\n          <h3>{post.title}</h3>\n          <p>{post.body}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction Archive() {\n  const { onAddPost } = useContext(usePost);\n  // Here we don't need the setter function. We're only using state to store these posts because the callback function passed into useState (which generates the posts) is only called once, on the initial render. So we use this trick as an optimization technique, because if we just used a regular variable, these posts would be re-created on every render. We could also move the posts outside the components, but I wanted to show you this trick 😉\n  const [posts] = useState(() =>\n    // 💥 WARNING: This might make your computer slow! Try a smaller `length` first\n    Array.from({ length: 10000 }, () => createRandomPost())\n  );\n\n  const [showArchive, setShowArchive] = useState(false);\n\n  return (\n    <aside>\n      <h2>Post archive</h2>\n      <button onClick={() => setShowArchive((s) => !s)}>\n        {showArchive ? \"Hide archive posts\" : \"Show archive posts\"}\n      </button>\n\n      {showArchive && (\n        <ul>\n          {posts.map((post, i) => (\n            <li key={i}>\n              <p>\n                <strong>{post.title}:</strong> {post.body}\n              </p>\n              <button onClick={() => onAddPost(post)}>Add as new post</button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </aside>\n  );\n}\n\nfunction Footer() {\n  return <footer>&copy; by The Atomic Blog ✌️</footer>;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}